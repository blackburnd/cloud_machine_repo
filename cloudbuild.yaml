steps:
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'compute'
  - 'ssh'
  - 'blackburnd@instance-20250825-143058'
  - '--zone'
  - 'us-central1-c'
  - '--command'
  - |
    set -e

    # Stop any running Nginx and kill all nginx processes to be safe
    sudo systemctl stop nginx || true
    sudo killall -9 nginx || true
    
    # Navigate to the repository directory or clone it
    if [ -d "/opt/portfoliosite/.git" ]; then
      cd /opt/portfoliosite
      git pull origin main
    else
      sudo git clone https://github.com/blackburnd/portfoliosite.git /opt/portfoliosite
      sudo chown -R blackburnd:blackburnd /opt/portfoliosite
      cd /opt/portfoliosite
    fi
    
    # Clear Python cache files to prevent type definition conflicts
    find . -name "*.pyc" -delete 2>/dev/null || true
    find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
    
    # Create a virtual environment and install dependencies
    if [ ! -d "venv" ]; then
      python3 -m venv venv
    fi
    source venv/bin/activate
    pip install -r requirements.txt
    
    # Make scripts executable
    chmod +x setup_ssl.sh

    # Validate GraphQL schema before deployment to catch type conflicts early
    echo "=== Validating GraphQL schema ==="
    source venv/bin/activate
    python3 validate_schema.py || exit 1

    # Clean up any previous Nginx config
    sudo rm -f /etc/nginx/sites-enabled/blackburnsystems.com
    sudo rm -f /etc/nginx/sites-enabled/default
    sudo rm -f /etc/nginx/conf.d/default.conf

    # Copy the Nginx configuration
    sudo cp nginx/blackburnsystems.com /etc/nginx/sites-available/
    sudo ln -sf /etc/nginx/sites-available/blackburnsystems.com /etc/nginx/sites-enabled/

    # Validate the Nginx configuration before restarting
    sudo nginx -t

    # Verify local assets exist
    echo "=== Checking local assets ==="
    if [ -d "app/assets/files" ]; then
        echo "✓ Assets directory exists"
        ls -la app/assets/files/
    else
        echo "✗ Assets directory not found"
    fi

    # Create a systemd override file to set the environment variable
    sudo mkdir -p /etc/systemd/system/portfolio.service.d
    sudo tee /etc/systemd/system/portfolio.service.d/override.conf > /dev/null << EOF
    [Service]
    Environment=_DATABASE_URL=postgresql://${_PG_USER}:${_PG_PASS}@${_PG_HOST}:${_PG_PORT}/${_PG_DB}
    Environment=DATABASE_URL=postgresql://${_PG_USER}:${_PG_PASS}@${_PG_HOST}:${_PG_PORT}/${_PG_DB}
    EOF

    # Debug: Show what was written to the override file
    echo "=== Database configuration written ==="
    sudo cat /etc/systemd/system/portfolio.service.d/override.conf
    echo "======================================"

    # Set up the systemd service
    sudo cp portfolio.service /etc/systemd/system/
    sudo systemctl daemon-reload
    sudo systemctl enable portfolio.service
    sudo systemctl restart portfolio.service

    # Start Nginx
    sudo systemctl start nginx
    sudo systemctl enable nginx

    # Wait for the application to start and check its status
    echo "Waiting for application to start..."
    sleep 10
    if sudo systemctl is-active --quiet portfolio.service; then
      echo "Application started successfully"
      echo "=== Service Status ==="
      sudo systemctl status portfolio.service --no-pager -l
      
      # Test local file access
      echo "=== Testing local file access ==="
      if curl -f http://localhost:8000/assets/files/ >/dev/null 2>&1; then
        echo "✓ Assets directory browsing works"
      else
        echo "✗ Assets directory browsing failed"
      fi
      
      if curl -f http://localhost:8000/assets/files/danielblackburn.pdf >/dev/null 2>&1; then
        echo "✓ Resume PDF accessible"
      else
        echo "✗ Resume PDF not accessible"
        echo "Available files:"
        curl -s http://localhost:8000/assets/files/ 2>/dev/null || echo "Directory listing failed"
      fi
      
    else
      echo "Application failed to start. Showing logs:"
      sudo journalctl -u portfolio.service --no-pager -n 20
      exit 1
    fi

substitutions:
  _PG_USER: 'postgres'
  _PG_PASS: '8JB6On1kTf6puF-'
  _PG_HOST: '10.24.80.3'
  _PG_PORT: '5432'
  _PG_DB: 'daniel_portfolio'

logsBucket: 'gs://impactful-study-470015-g5_cloudbuild_logs'
options:
  logging: GCS_ONLY
